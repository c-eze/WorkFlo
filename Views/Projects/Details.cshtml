@using AspnetCoreMvcFull.Models.Enums
@using AspnetCoreMvcFull.Services.Interfaces
@using Microsoft.AspNetCore.Identity

@inject UserManager<BTUser> UserManager
@inject IBTProjectService ProjectService
@inject IBTTicketHistoryService HistoryService

@model AspnetCoreMvcFull.Models.Project

@{
	ViewData["Title"] = "Project Details";

	BTUser btUser = await UserManager.GetUserAsync(User);
	BTUser projectManager = await ProjectService.GetProjectManagerAsync(Model.Id);
}

@* ************** Content ************** *@

<nav aria-label="breadcrumb">
	<ol class="breadcrumb">
		<li class="breadcrumb-item">Home</li>
		<li class="breadcrumb-item"><a asp-controller="Projects" asp-action="AllProjects">Projects</a></li>
		<li class="breadcrumb-item active" aria-current="page"><strong>@Model.Name</strong></li>
	</ol>
</nav>

<div class="row row-cols-1">
	<div class="col d-flex flex-row mb-6">
		<div class="me-auto">
			<a asp-controller="Projects" asp-action="AllProjects" class="btn btn-outline-primary">Back To Projects</a>
		</div>
		<div>
			<a asp-controller="Projects" asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary me-2">Edit</a>
		</div>
		<div>
			<a asp-controller="Projects" asp-action="Archive" asp-route-id="@Model.Id" class="btn btn-danger">Archive</a>
		</div>
	</div>
	<div class="col-md-6">
		<div class="card mb-6">
			<div class="card-body">
				<h4 class="mb-1">@Model.Name</h4>
				<div class="mb-3">
					@if (@Model.ProjectPriority.Name == nameof(BTProjectPriority.Low))
					{
						<span class="badge bg-success-subtle text-success">Priority: @Model.ProjectPriority.Name</span>
					}
					else if (@Model.ProjectPriority.Name == nameof(BTProjectPriority.High))
					{
						<span class="badge bg-danger-subtle text-danger">Priority: @Model.ProjectPriority.Name</span>
					}
					else
					{
						<span class="badge bg-dark-subtle text-dark">Priority: @Model.ProjectPriority.Name</span>
					}
					<span class="badge bg-warning text-dark  ms-1">@Model.StartDate.ToString("MM/dd/yyyy") - @Model.EndDate.ToString("MM/dd/yyyy")</span>
				</div>
				<div class="d-flex align-content-center">
					@if (projectManager != null)
					{
						<div class="me-2">
							@if (projectManager.AvatarFileData != null)
							{
								<img class="rounded-circle" src="data:image/*;base64,@(Convert.ToBase64String(projectManager.AvatarFileData))" alt="" />
							}
							else
							{
								<img class="rounded-circle" style="width:60px;height:60px;" src="https://api.dicebear.com/9.x/initials/svg?seed=@projectManager.FullName" width="50" height="auto">
							}
						</div>
						<div>
							<h5 class="mb-0">@projectManager.FullName</h5>
							<p class="text-muted mb-0">Project Manager</p>
						</div>
					}
					else
					{
						<div class="me-2">
							<img class="rounded-circle" style="width:60px;height:60px;" src="/img/defaultUserImage.png" alt="" />
						</div>
						<div class="wid-u-info">
							<h5 class="text-muted mb-0">Not Assigned</h5>
							@if (User.IsInRole(nameof(Roles.Admin)))
							{
								<span><a asp-action="AssignPM" asp-controller="Projects" asp-route-projectId="@Model.Id" class="btn btn-xs btn-outline-info">Assign PM</a></span>
							}
						</div>
					}
				</div>
			</div>
		</div>
	</div>
	<div class="col-md-6">
		<div class="card mb-6">
			<div class="card-body">
				<h4>Description</h4>
				<p>@Model.Description</p>
				<div class="progress-container progress-info mb-2">
					<div class="text-light small fw-medium">Project Status</div>
					<div class="progress" style="height: 16px;">
						@{
							var start = Model.StartDate.DateTime;
							var end = Model.EndDate.DateTime;
							var today = DateTime.Now;
							var percent = today >= end ? 100 : today < start ? 0 : Math.Round((today.Subtract(start)) / (end.Subtract(start)) * 100);
						}
						<div class="progress-bar" role="progressbar" style="width: @percent%;" aria-valuenow="75" aria-valuemin="0" aria-valuemax="100">@percent%</div>
					</div>
				</div>
			</div>
		</div>
	</div>
	<div class="col">
		<div class="card mb-6">
			<div class="card-body">
				<h4>Project Team</h4>
				@if ((await ProjectService.GetAllProjectMembersExceptPMAsync(Model.Id)).Count == 0)
				{

					<div class="d-flex flex-row align-items-center justify-content-center p-5">
						<p>No Project Members</p>
					</div>
				}
				else
				{
					<div class="d-flex flex-wrap mb-3">
						@foreach (BTUser member in await ProjectService.GetAllProjectMembersExceptPMAsync(Model.Id))
						{
							<div class="d-flex align-content-center me-3 mb-3">
								<div class="me-3">
									@if (projectManager.AvatarFileData != null)
									{
										<img class="rounded-circle" src="data:image/*;base64,@(Convert.ToBase64String(projectManager.AvatarFileData))" alt="" />
									}
									else
									{
										<img class="rounded-circle" style="width:60px;height:60px;" src="https://api.dicebear.com/9.x/initials/svg?seed=@member.FullName" width="50" height="auto">
									}
								</div>
								<div>
									<h5 class="mb-0">@member.FullName</h5>
									<p class="text-muted mb-0">@((await UserManager.GetRolesAsync(member)).FirstOrDefault())</p>
								</div>
							</div>
						}
					</div>
				}
				@if (User.IsInRole(nameof(Roles.Admin)) || (btUser.Id == projectManager.Id))
				{
					<div>
						<a class="btn btn-primary" asp-action="AssignMembers" asp-controller="Projects" asp-route-id="@Model.Id">Manage Team</a>
					</div>
				}
			</div>
		</div>
	</div>
	<div class="col-md-6">
		<div class="card mb-6">
			<div class="card-body">
				<h4>Project Activity</h4>
				<div class="border border-1 rounded ps-2 pe-2" style="overflow-y:auto;height:300px;">
					@* Project Activity loop *@
					@foreach (TicketHistory history in await HistoryService.GetProjectTicketsHistoriesAsync(Model.Id, btUser.CompanyId))
					{
						<div class="">
							<h6>@history.Created.ToString("dd MMM yyyy")</h6>
							<p>@history.Description</p>
							<span>By: @history.User.FullName</span>
							<div class="border-bottom border-dark mb-3">
								<p>The ticket <b>@history.Property</b> was edited</p>
								<p>@($"Previous {history.Property}:  ")<span class="text-danger">@($"{history.OldValue}")</span></p>
								<p>@($"Current {history.Property}:  ")<span class="text-success">@($"{history.NewValue}")</span></p>
							</div>
						</div>
					}
				</div>
			</div>
		</div>
	</div>
	<div class="col-md-6">
		<div class="card mb-6">
			<div class="card-body">
				<h4>Name</h4>
			</div>
		</div>
	</div>
	@* Tickets *@
	<div class="col">
		<div class="card mb-6">
			<div class="card-body">
				<h4>Tickets</h4>
				<div class="table-responsive" style="overflow-y:auto;height:600px;">
					<table class="table table-hover">
						<thead class="">
							<tr>
								@* Table header *@
								<th>Title</th>
								<th>Developer</th>
								<th>Status</th>
								<th>Priority</th>
								<th>Date</th>
							</tr>
						</thead>
						<tbody>
							@* Table body *@
							@foreach (var ticket in Model.Tickets.OrderByDescending(d => d.Created))
							{
								<tr>
									<td><a asp-action="Details" asp-controller="Tickets" asp-route-id="@ticket.Id" class="btn btn-link"><strong>@ticket.Title</strong></a> </td>
									<td>
										@if (ticket.DeveloperUserId != null)
										{
											@ticket.DeveloperUser?.FullName
										}
										else
										{
											<span class="badge bg-warning text-dark">Unassigned</span>
										}
									</td>
									<td>
										@if (ticket.TicketStatus.Name == nameof(BTTicketStatus.New))
										{
											<span class="badge rounded-pill bg-primary">@ticket.TicketStatus.Name </span>
										}
										else
										{
											<span class="badge rounded-pill bg-dark">@ticket.TicketStatus.Name </span>
										}
									</td>
									<td>
										@if (ticket.TicketPriority.Name == nameof(BTTicketPriority.Low))
										{
											<span class="badge rounded-pill bg-success">@ticket.TicketPriority.Name </span>
										}
										else if (ticket.TicketPriority.Name == nameof(BTTicketPriority.High))
										{
											<span class="badge rounded-pill text-bg-warning">@ticket.TicketPriority.Name </span>
										}
										else if (ticket.TicketPriority.Name == nameof(BTTicketPriority.Urgent))
										{
											<span class="badge rounded-pill text-bg-danger">@ticket.TicketPriority.Name </span>
										}
										else
										{
											<span class="badge rounded-pill bg-primary">@ticket.TicketPriority.Name </span>
										}
									</td>
									<td>@ticket.Created.ToString("MM/dd/yyyy")</td>
								</tr>
							}
						</tbody>
					</table>
				</div>
			</div>
		</div>
	</div>
	@* / Tickets *@
</div>

<div>
	<div class="container-fluid">
		<div class="row gy-2">
			<div class="col-md-12 col">
				<div class="row col-cols-2 mt-5 bg-secondary">
					<div class="card col m-1 p-2">
						<div class="body">
							<p>@Model.Description</p>
							<div class="progress-container progress-info m-b-25">
								<span class="progress-badge" style="font-size:small">Project Status</span>
								<div class="progress">
									@{
			// var start = Model.StartDate.DateTime;
										// var end = Model.EndDate.DateTime;
										// var today = DateTime.Now;
										// var percent = today >= end ? 100 : today < start ? 0 : Math.Round((today.Subtract(start)) / (end.Subtract(start)) * 100);
									}

									<div class="progress-bar" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style="width: @percent%;">
										@* Use Progress Bar code variable here *@
										<span class="progress-value">@percent%</span>
									</div>
								</div>
							</div>
						</div>
					</div>
					<div class="card col m-1 p-2">
						<div class="body">
							<ul class=" list-unstyled basic-list">
								<li>Start Date: <span class="">@Model.StartDate.ToString("dd MMM, yyyy")</span></li>
								<li>Deadline: <span class="">@Model.EndDate.ToString("dd MMM, yyyy")</span></li>
								<li>Priority: <span class="">@Model.ProjectPriority?.Name</span></li>
								@if (today < end && today >= start)
								{
									<li>Status:<span class="">Active</span></li>
								}
								else
								{
									<li>Status:<span class="">Inactive</span></li>
								}
							</ul>
						</div>
					</div>
				</div>
			</div>
			<div class="col-md-4 col mt-5 ">
				<div class="bg-secondary">
					<div class="card m-1 p-2">
						<div class="header">
							<h2>Project Manager</h2>
							<hr />
						</div>
						@if (projectManager != null)
						{
							<div>
								@if (projectManager.AvatarFileData != null)
								{
									<img class="rounded-circle" src="data:image/*;base64,@(Convert.ToBase64String(projectManager.AvatarFileData))" alt="" />
								}
								else
								{
									<img class="rounded-circle" style="width:60px;height:60px;" src="https://cdn.icon-icons.com/icons2/1378/PNG/512/avatardefault_92824.png" alt="" />
								}
								<div>
									<h5>@projectManager.FullName</h5>
									<span>@projectManager.Email</span>
									<p class="text-muted m-b-0">Project Manager</p>
									@if (User.IsInRole(nameof(Roles.Admin)) || (btUser.Id == projectManager.Id))
									{
										<a class="btn btn-xs alert-primary" style="font-size:x-small" asp-action="AssignMembers" asp-controller="Projects" asp-route-id="@Model.Id">Manage Team</a>
									}
								</div>
							</div>
						}
						else
						{
							<div>
								<img class="rounded-circle" style="width:60px;height:60px;" src="https://cdn.icon-icons.com/icons2/1378/PNG512/avatardefault_92824.png" alt="" />
								<div class="wid-u-info">
									<h5 class="text-muted mb-0">Not Assigned</h5>
									@if (User.IsInRole(nameof(Roles.Admin)))
									{
										<span><a asp-action="AssignProjectManager" asp-controller="Home" asp-route-id="@Model.Id" class="btn btn-xs btn-outline-info">Assign PM</a></span>
									}
								</div>
							</div>
						}
					</div>
				</div>
			</div>
		</div>
		<div class="col-md-4 col mt-5 ">
			<div class="bg-secondary">
				<div class="card m-1 p-2">
					<div class="header">
						<h2>Project Team</h2>
						<hr />
					</div>
					<div class="body" style="overflow-y:auto;height:300px;">
						<div class="body" style="overflow-y:auto;height:300px;">
							<ul class="right_chat list-unstyled mb-0">
								@* Logic for avatars *@
								@foreach (BTUser member in await ProjectService.GetAllProjectMembersExceptPMAsync(Model.Id))
								{
									<li class="">
										<a href="">
											<div class="media">
												@if (member.AvatarFileData != null)
												{
													<img class="" src="data:image/*;base64,@(Convert.ToBase64String(member.AvatarFileData))" alt="" />
												}
												else
												{
													<img class="" style="width:30px;height:30px;" src="https://cdn.icon-icons.com/icons2/1378/PNG/512/avatardefault_92824.png" alt="" />
												}
											</div>
										</a>
										<div class="">
											<span class="">@member.FullName</span>
											<span class="" style="font-size:x-small">[@((await UserManager.GetRolesAsync(member)).FirstOrDefault())]</span>
										</div>
									</li>
								}
							</ul>

						</div>
					</div>
				</div>
			</div>
			<div class="col-md-4 col mt-5 ">
				<div class="bg-dark">
					<div class="card m-1 p-2">
						<div class="header">
							<h2>Project Activity</h2>
							<hr />
						</div>
						<div class="body" style="overflow-y:auto;height:300px;background-color:antiquewhite">
							@* Project Activity loop *@
							@foreach (TicketHistory history in await HistoryService.GetProjectTicketsHistoriesAsync(Model.Id, btUser.CompanyId))
							{
								<div class="">
									<h6>@history.Description</h6>
									<span>By: <a href="" title="@history.User.FullName">@history.User.FullName</a></span>
									<div class="">
										<p>The ticket <b>@history.Property</b> was edited</p>
										<p>@($"Previous {history.Property}:  {history.OldValue}")</p>
										<p>@($"Current {history.Property}:  {history.NewValue}")</p>
									</div>
								</div>
							}
						</div>

					</div>
				</div>
			</div>
			<div class="col-md-12 col">
				<div class="mt-5 bg-secondary">
					<div class="card m-1 p-2">
						<div class="header">
							<h2>Tickets</h2>
						</div>
						<div class="body">
							<div class="table-responsive" style="overflow-y:auto;height:600px;">
								<table class="table table-hover">
									<thead class="">
										<tr>
											@* Table header *@
											<th>Title</th>
											<th>Developer</th>
											<th>Status</th>
											<th>Priority</th>
											<th>Date</th>
											<th>Action</th>
										</tr>
									</thead>
									<tbody>
										@* Table body *@
										@foreach (var ticket in Model.Tickets.OrderByDescending(d => d.Created))
										{
											<tr>
												<td><a asp-action="Details" asp-controller="Tickets" asp-route-id="@ticket.Id" style="color:black"><strong>@ticket.Title</strong></a> </td>
												<td>
													@if (ticket.DeveloperUserId != null)
													{
														@ticket.DeveloperUser?.FullName
													}
													else
													{
														if (User.IsInRole(nameof(Roles.Admin)) || User.IsInRole(nameof(Roles.ProjectManager)))
														{
															<a class="btn btn-xs btn-info" asp-action="AssignDeveloper" asp-controller="Tickets" asp-route-ticketId="@ticket.Id">Assign Dev</a>
														}

													}
												</td>
												@if (ticket.TicketStatus.Name == "New")
												{
													<td><span class="badge-success">@ticket.TicketStatus.Name </span></td>

												}
												else
												{
													<td><span class="badge-primary">@ticket.TicketStatus.Name </span></td>
												}
												<td><span class="badge-warning">@ticket.TicketPriority.Name </span></td>
												<td>@ticket.Created.ToString("MM-dd-yyyy")</td>
												<td>
													<a class="btn btn-sm btn-outline-info" asp-action="Details" asp-controller="Tickets" asp-route-id="@ticket.Id"><i class="fs-5 bi-justify"></i></a>
													@if (ticket.DeveloperUserId == btUser.Id || ticket.OwnerUserId == btUser.Id || (projectManager?.Id == btUser.Id) || User.IsInRole(nameof(Roles.Admin)))
													{
														<a class="btn btn-sm btn-outline-secondary" asp-action="Edit" asp-controller="Tickets" asp-route-id="@ticket.Id"><i class="fs-5 bi-pencil"></i></a>
													}

													@if (User.IsInRole("Admin") || (projectManager?.Id == btUser.Id))
													{
														<a class="btn btn-sm btn-outline-danger"><i class="fs-5 bi-archive"></i></a>
													}
												</td>
											</tr>
										}
									</tbody>
								</table>
							</div>

						</div>
					</div>

				</div>
			</div>
		</div>
	</div>
</div>
